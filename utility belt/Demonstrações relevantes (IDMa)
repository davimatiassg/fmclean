	Demonstrações:
Divide é uma preordem: 
|(∀a)[ a | a ] 							[Reflexividade]
|(∀a, b, c)[ a | b & b | c ⇒ a | c] 	[Transitividade];
Demonstração da transitividade (reflexividade é trivial)
{
	Sejam a, b, c inteiros;
	Sejam inteiros u, v tais que a*u = b e b*v = c;
	Logo, temos (a*u)*v = c;
	Uso u*v como testemunha;
}

Propriedades do divide:
| (∀a, b) a | b ⇒ a | −b & − a | b
{
	Sejam a, b inteiros;
	Seja k tal que ak = b;
	Parte a|-b
		Uso -k como testemunha
		Calculamos:
			-b = - (k*a)  [Escolha de k]
			   = -1*(k*a) 
			   = (-1*k)*a 
			   = -ka;
	Parte -a | b (similar);
}
| (∀a, b, c) a | b ⇒ a | bc;
{
	Sejam a, b, c inteiros;
	Seja k inteiro tq ak = b;
	Uso (k*c) como testemunha;
	Calculamos:
		a*(k*c) = (a*k)*c
				= b*c [Escolha de k]
}
| (∀ a, b, c) a | b & a | c ⇒ a | b + c;
{
	Sejam a, b, c inteiros;
	Sejam u, v inteiros tq au = b e av = c;
	Uso (u+v) como testemunha:
	Calculamos:
		a*(u+v) = a*u + a*v
			    = b + av      [Escolha de u]
			    = b + c       [Escolha de v]
}
| (∀ a, b, c, x, y) a | b & a | c ⇒ a | bx + cy;
{
	Sejam a, b, c, x, y inteiros;
	Sejam u, v inteiros tq au = b e av = c;
	Uso (ux + vy) como testemunha;
	Calculamos
		a*(ux*vy) = aux + avy
				  = bx + avy   [Escolha de u]
				  = bx + cy    [Escolha de v]			  
}
| (∀ a, b, c)[ c ≠ 0  ⇒ ( a | b ⇐⇒ ac | bc )];
{
	Sejam a, b, c inteiros;
	Suponha c diferente de zero;

	Parte da ⇒:
		Seja k inteiro tal que ak = b;
		Uso k como testemunha;
		Calculamos:
			(ac)*k = (a*k)*c;
				 = b * c [Escolha de k];

    Parte da ⇐:
    	Seja k tal que (ac)*k = bc;
    	Logo, (ak)*c = bc;
    	Logo ak = b (Z-CMul c (ak) b);
}

PBO Shiftado:
{
	Seja l inteiro;
	Seja A um conjunto de inteiros;
	Seja a o menor inteiro positivo tal que (a+l-1) ∈ A;
	Como 0 < a, logo 0 ≤ a-1 
	{
		Seja a inteiro positivo;
		Caso a < 1: contradição (não existe número entre 0 e 1);
		Caso a = 1:
			Logo, 1-1 = 0;
		Caso a > 1:
			logo a-1 > 0;
	}
	logo l ≤ a-1+l (1);
	Uso (a-1+l) como testemunha;

	Parte do pertencimento:
	
		Como l ≤ (a-1+l) e pela escolha de a, logo (a-1+l) ∈ { a' ∈ A  |  l ≤ a' };

	Parte da minimidade:

		Seja b inteiro positivo tal que (b+l-1) ∈ { a' ∈ A  |  l ≤ a' };
		Logo, pela escolha de a, temos b ≤ a
		Logo, temos b+l-1 ≤ a+l-1
}


Divisão de euclides:
(∀a, b)[ b ≠ 0 ⇒ (∃!q, r)[a = bq + r & 0 ≤ r < |b|]
{
	Sejam a, b inteiros;
	Suponha b diferente de zero;
	Parte da Existência:
		Considere o conjunto K = { a - bk | k ∈ Z}
		Pela escolha de b, temos que K possui valores positivos (*Lema  1);
		Logo, pelo PBO, seja r o menor inteiro não negativo habitante de K;
		Seja q inteiro tal que a -bq = r;
		Uso q, r como testemunhas;

		Parte a = bq + r:
			Escolha de q;

		Parte 0 ≤ r < |b|;

			Parte 0 ≤ r:
				Pela escolha de r, logo 0 ≤ r;

			Parte r < |b|:

				Caso b positivo: ///Não vou mais ficar citando Z-TRI toda hora!

					Basta provar que r -b < 0
					Calculamos:
						r > r-b;
						  > (a -bq) -b;
						  > a -b*(q + 1);

					Demonstro que a - b(q+1) pertence a K
						Uso q+1 como testemunha;

					Logo, como r é o menor inteiro positivo de K e a - b(q+1) < r, logo r-b < 0

				Caso -b positivo:
		 			Similar


	Parte da Unicidade:
		Sejam q, r, q', r' inteiros tais que 
		|a = r + bq & 0 ≤ r < |b|
		|a = r'+ bq'& 0 ≤ r'< |b|

		Calculamos:
			r = a - bq
			  = (r'+ bq')-bq
			  = r' + b(q'-q) [D1]

		Calculamos:
		|b| > r - r';
			> r' + b(q'-q) - r';
			> b(q'-q);

		Caso b positivo:
			Logo, como b > b(q'-q), temos 1 > q'-q;
			Logo q'-q ≤ 0;

			Caso -(q'-q) positivo:
				Como r' < b, logo r' < b(-(q'-q));
				Logo r' -b(-(q'-q)) < 0;
				Logo r' + b(q'-q) < 0;
				Logo r < 0 [D1]
				Contradição

			Caso q'-q = 0;
				Logo, q' = q;
				Como r = r' + b(q'-q), logo r = r' + b*0;
				Logo r = r';


		Caso b negativo:
			Similar;
			
	Fim da demonsrtação
		
}
Equivalência entre invertível e unit nos inteiros:
{
	Parte esquerda:
		Seja um inteiro a tal que a seja unit;
		logo, a | 1
		logo, seja x a' tal que a*a' = 1;
		uso a' como testetmunha;
	Parte direita;
		Seja um inteiro a tal que a é invertível;
		Logo, a | 1 (Trivial)
		Seja x inteiro,
		Como a | 1, logo a | 1*x;
		Logo a | x;
}


Lema de Bézout:
{
	Sejam a, b inteiros,
	Sejam s, t inteiros,
	Seja n tal que n = MDC(a, b) (1);
	Logo, n | a e n | b;
	Como (1), logo, n | sa;
	Como (1), logo, n | tb;
	Logo, n | sa + tb;
	logo, seja m tal que nm = sa + tb;
	Uso s, t como testemunhas para s, t;
	Uso nm como testemunha para d;

}

Algorítmo de Euclides:
{
	Sejam a, b inteiros

	Seja d inteiro um MDC(a, b);
	Pela divisão de euclides, sejam q, r, tais que a = qb + r e r < |b|, com r não negativo;
	Como d divide a e b, sejam s e t inteiros tais que d*s = a e d*t = b;
	Logo, d*s = q*(d*t) + r;
	Logo, r = ds - qdt;
	Logo, r = d*(s-qt);
	Logo d | r;


	Indução shiftada (base 1) generalizando d'

	Parte base:
	{
		Como 1 é unit, logo 1 divide d;
	}

	Passo indutivo:
	{
		Suponha que d é mdc de 
	}
	Seja d' inteiro tal que d' | a e d' | r;
	Logo, sejam u, v, tais que d'*u = a e d'*v = r;

	ds = dqt + r
	d'*(alguma tralha) = d
	Logo d' | d
}
